<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jooby</groupId>
    <artifactId>jooby-project</artifactId>
    <version>1.5.1</version>
  </parent>
  <groupId>org.ort.school</groupId>
  <artifactId>crm</artifactId>
  <version>1.4.1</version>
  <prerequisites>
    <maven>3.0.2</maven>
  </prerequisites>

  <properties>
    <boringssl.version>2.0.7.Final</boringssl.version>
    <jooby.version>1.5.1</jooby.version>
    <jooq.version>3.11.5</jooq.version>
    <spek.version>1.2.1</spek.version>
    <kotlin.version>1.2.71</kotlin.version>
    <hibernate-validator.version>6.0.7.Final</hibernate-validator.version>
    <javax.el-api.version>3.0.0</javax.el-api.version>
    <h2.version>1.4.196</h2.version>
    <http-client.version>4.5.6</http-client.version>
    <!-- Startup class -->
    <application.class>org.ort.school.app.SchoolCRMKt</application.class>
  </properties>

  <dependencies>

    <!-- Server -->

    <dependency>
      <groupId>org.jooby</groupId>
      <artifactId>jooby-undertow</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jooby</groupId>
      <artifactId>jooby-lang-kotlin</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
      <version>${kotlin.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jooby</groupId>
      <artifactId>jooby-pac4j2</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jooby</groupId>
      <artifactId>jooby-jooq</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jooby</groupId>
      <artifactId>jooby-flyway</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jooby</groupId>
      <artifactId>jooby-hbv</artifactId>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-codegen</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mindrot</groupId>
      <artifactId>jbcrypt</artifactId>
      <version>0.4</version>
    </dependency>

    <dependency>
      <groupId>org.jooby</groupId>
      <artifactId>jooby-assets</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jooby</groupId>
      <artifactId>jooby-csl</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>javax.el-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jooby</groupId>
      <artifactId>jooby-rocker</artifactId>
    </dependency>

    <dependency>
      <groupId>com.github.salomonbrys.kotson</groupId>
      <artifactId>kotson</artifactId>
      <version>2.5.0</version>
    </dependency>
    <!-- REST client -->

    <dependency>
      <groupId>com.mashape.unirest</groupId>
      <artifactId>unirest-java</artifactId>
      <version>1.4.9</version>
    </dependency>

    <!--webjars-->

    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>materializecss</artifactId>
      <version>1.0.0</version>
    </dependency>

    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery</artifactId>
      <version>3.3.1-1</version>
    </dependency>

    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>summernote</artifactId>
      <version>0.8.10</version>
    </dependency>

    <!-- tests -->

    <dependency>
      <groupId>com.nhaarman</groupId>
      <artifactId>mockito-kotlin</artifactId>
      <version>1.6.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.23.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.winterbe</groupId>
      <artifactId>expekt</artifactId>
      <version>0.5.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.andreinc.mockneat</groupId>
      <artifactId>mockneat</artifactId>
      <version>0.2.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test-junit</artifactId>
      <version>${kotlin.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.spek</groupId>
      <artifactId>spek-api</artifactId>
      <version>${spek.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jetbrains.spek</groupId>
      <artifactId>spek-junit-platform-engine</artifactId>
      <version>${spek.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <version>1.3.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>fluent-hc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>2.4.0-b180830.0438</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.annotation</artifactId>
      <version>10.0-b28</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
    </dependency>
  </dependencies>

  <build>

    <plugins>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <configuration>
          <jvmTarget>1.8</jvmTarget>
          <myIncremental>true</myIncremental>
        </configuration>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/java</sourceDir>
                <sourceDir>${project.basedir}/target/generated-sources</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <phase>test-compile</phase>
            <configuration>
              <sourceDirs>${project.basedir}/src/test/java</sourceDirs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <executions>
          <!-- Replacing default-compile as it is treated specially by maven -->
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <!-- Replacing default-testCompile as it is treated specially by maven -->
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>java-compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>compile</phase>
          </execution>
          <execution>
            <id>java-test-compile</id>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <phase>test-compile</phase>
          </execution>
        </executions>
      </plugin>
      <!-- Build fat jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
      </plugin>
      <plugin>

        <!-- Specify the maven code generator plugin -->
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${jooq.version}</version>

        <!-- Specify the plugin configuration.
                                             The configuration format is the same as for the standalone code generator -->
        <configuration>
          <skip>true</skip>
          <!-- JDBC connection parameters -->
          <jdbc>
            <driver>org.h2.Driver</driver>
            <url>jdbc:h2:file:./db/schoolcrm;MODE=PostgreSQL;LOCK_MODE=0</url>
            <user></user>
            <password></password>
          </jdbc>

          <!-- Generator parameters -->
          <generator>
            <database>
              <name>org.jooq.util.h2.H2Database</name>
              <includes>.*</includes>
              <excludes></excludes>
              <!-- In case your database supports catalogs, e.g. SQL Server:
                                                                      <inputCatalog>pub</inputCatalog>
                                                                        -->
              <inputSchema>PUBLIC</inputSchema>
            </database>
            <target>
              <packageName>org.ort.school.crm.jooq.model</packageName>
              <directory>src/main/java</directory>
            </target>
          </generator>
        </configuration>

        <!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
        <dependencies>
          <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
          </dependency>
        </dependencies>

        <!-- The plugin should hook into the generate goal -->
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>1.4.3</version>
        <configuration>
          <mutators>
            <mutator>NEW_DEFAULTS</mutator>
          </mutators>
          <avoidCallsTo>
            <avoidCallsTo>kotlin.jvm.internal.Intrinsics</avoidCallsTo>
          </avoidCallsTo>
          <maxMutationsPerClass>0</maxMutationsPerClass>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.github.pitest</groupId>
            <artifactId>pitest-kotlin</artifactId>
            <version>master</version>
          </dependency>
        </dependencies>
      </plugin>

    </plugins>
  </build>
  <repositories>
    <repository>
      <id>jvnet-nexus-staging</id>
      <url>http://maven.java.net/content/repositories/staging/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>jcenter</id>
      <url>https://jcenter.bintray.com/</url>
    </repository>
    <repository>
      <id>central</id>
      <url>http://repo1.maven.org/maven2/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </pluginRepository>
    <pluginRepository>
      <id>jcenter</id>
      <url>https://jcenter.bintray.com/</url>
    </pluginRepository>
    <pluginRepository>
      <id>central</id>
      <url>http://repo1.maven.org/maven2/</url>
    </pluginRepository>
  </pluginRepositories>
  <profiles>
    <profile>
      <id>license</id>
      <activation>
        <file>
          <exists>${basedir}${file.separator}LICENSE</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <version>${license-maven-plugin.version}</version>
            <configuration>
              <header>LICENSE</header>
              <strictCheck>true</strictCheck>
              <aggregate>true</aggregate>
              <skipExistingHeaders>false</skipExistingHeaders>
              <includes>
                <include>src/main/java/**/*.java</include>
                <include>src/main/java/**/*.kt</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>format</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
<!--vim: noai:ts=2:sw=2:et:-->
